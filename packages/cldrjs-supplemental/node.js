'use strict';

/*!
 * CLDR JavaScript Library v0.5.0 2018-09-12T19:19Z MIT license Â© Rafael Xavier
 * http://git.io/h4lmVg
 */

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var Cldr = _interopDefault(require('@cldrjs/core'));

var arrayIsArray = Array.isArray || function (obj) {
  return Object.prototype.toString.call(obj) === "[object Array]";
};

function alwaysArray (somethingOrArray) {
  return arrayIsArray(somethingOrArray) ? somethingOrArray : [somethingOrArray];
}

function supplementalMain (cldr) {
  var prepend, supplemental;

  prepend = function prepend(_prepend) {
    return function (path) {
      path = alwaysArray(path);
      return cldr.get([_prepend].concat(path));
    };
  };

  supplemental = prepend("supplemental"); // Week Data
  // http://www.unicode.org/reports/tr35/tr35-dates.html#Week_Data

  supplemental.weekData = prepend("supplemental/weekData");

  supplemental.weekData.firstDay = function () {
    return cldr.get("supplemental/weekData/firstDay/{territory}") || cldr.get("supplemental/weekData/firstDay/001");
  };

  supplemental.weekData.minDays = function () {
    var minDays = cldr.get("supplemental/weekData/minDays/{territory}") || cldr.get("supplemental/weekData/minDays/001");
    return parseInt(minDays, 10);
  }; // Time Data
  // http://www.unicode.org/reports/tr35/tr35-dates.html#Time_Data


  supplemental.timeData = prepend("supplemental/timeData");

  supplemental.timeData.allowed = function () {
    return cldr.get("supplemental/timeData/{territory}/_allowed") || cldr.get("supplemental/timeData/001/_allowed");
  };

  supplemental.timeData.preferred = function () {
    return cldr.get("supplemental/timeData/{territory}/_preferred") || cldr.get("supplemental/timeData/001/_preferred");
  };

  return supplemental;
}

var initSuper = Cldr.prototype.init;
/**
 * .init() automatically ran on construction.
 *
 * Overload .init().
 */

Cldr.prototype.init = function () {
  initSuper.apply(this, arguments);
  this.supplemental = supplementalMain(this);
};

module.exports = Cldr;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvYXJyYXkvaXNfYXJyYXkuanMiLCIuLi8uLi9zcmMvdXRpbC9hbHdheXNfYXJyYXkuanMiLCIuLi8uLi9zcmMvc3VwcGxlbWVudGFsL21haW4uanMiLCIuLi8uLi9zcmMvc3VwcGxlbWVudGFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IEFycmF5LmlzQXJyYXkgfHxcbiAgZnVuY3Rpb24ob2JqKSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSBcIltvYmplY3QgQXJyYXldXCI7XG4gIH07XG4iLCJpbXBvcnQgYXJyYXlJc0FycmF5IGZyb20gXCIuL2FycmF5L2lzX2FycmF5XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNvbWV0aGluZ09yQXJyYXkpIHtcbiAgcmV0dXJuIGFycmF5SXNBcnJheShzb21ldGhpbmdPckFycmF5KSA/IHNvbWV0aGluZ09yQXJyYXkgOiBbc29tZXRoaW5nT3JBcnJheV07XG59XG4iLCJpbXBvcnQgYWx3YXlzQXJyYXkgZnJvbSBcIi4uL3V0aWwvYWx3YXlzX2FycmF5XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNsZHIpIHtcbiAgdmFyIHByZXBlbmQsIHN1cHBsZW1lbnRhbDtcblxuICBwcmVwZW5kID0gZnVuY3Rpb24ocHJlcGVuZCkge1xuICAgIHJldHVybiBmdW5jdGlvbihwYXRoKSB7XG4gICAgICBwYXRoID0gYWx3YXlzQXJyYXkocGF0aCk7XG4gICAgICByZXR1cm4gY2xkci5nZXQoW3ByZXBlbmRdLmNvbmNhdChwYXRoKSk7XG4gICAgfTtcbiAgfTtcblxuICBzdXBwbGVtZW50YWwgPSBwcmVwZW5kKFwic3VwcGxlbWVudGFsXCIpO1xuXG4gIC8vIFdlZWsgRGF0YVxuICAvLyBodHRwOi8vd3d3LnVuaWNvZGUub3JnL3JlcG9ydHMvdHIzNS90cjM1LWRhdGVzLmh0bWwjV2Vla19EYXRhXG4gIHN1cHBsZW1lbnRhbC53ZWVrRGF0YSA9IHByZXBlbmQoXCJzdXBwbGVtZW50YWwvd2Vla0RhdGFcIik7XG5cbiAgc3VwcGxlbWVudGFsLndlZWtEYXRhLmZpcnN0RGF5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIGNsZHIuZ2V0KFwic3VwcGxlbWVudGFsL3dlZWtEYXRhL2ZpcnN0RGF5L3t0ZXJyaXRvcnl9XCIpIHx8XG4gICAgICBjbGRyLmdldChcInN1cHBsZW1lbnRhbC93ZWVrRGF0YS9maXJzdERheS8wMDFcIilcbiAgICApO1xuICB9O1xuXG4gIHN1cHBsZW1lbnRhbC53ZWVrRGF0YS5taW5EYXlzID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIG1pbkRheXMgPVxuICAgICAgY2xkci5nZXQoXCJzdXBwbGVtZW50YWwvd2Vla0RhdGEvbWluRGF5cy97dGVycml0b3J5fVwiKSB8fFxuICAgICAgY2xkci5nZXQoXCJzdXBwbGVtZW50YWwvd2Vla0RhdGEvbWluRGF5cy8wMDFcIik7XG4gICAgcmV0dXJuIHBhcnNlSW50KG1pbkRheXMsIDEwKTtcbiAgfTtcblxuICAvLyBUaW1lIERhdGFcbiAgLy8gaHR0cDovL3d3dy51bmljb2RlLm9yZy9yZXBvcnRzL3RyMzUvdHIzNS1kYXRlcy5odG1sI1RpbWVfRGF0YVxuICBzdXBwbGVtZW50YWwudGltZURhdGEgPSBwcmVwZW5kKFwic3VwcGxlbWVudGFsL3RpbWVEYXRhXCIpO1xuXG4gIHN1cHBsZW1lbnRhbC50aW1lRGF0YS5hbGxvd2VkID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIGNsZHIuZ2V0KFwic3VwcGxlbWVudGFsL3RpbWVEYXRhL3t0ZXJyaXRvcnl9L19hbGxvd2VkXCIpIHx8XG4gICAgICBjbGRyLmdldChcInN1cHBsZW1lbnRhbC90aW1lRGF0YS8wMDEvX2FsbG93ZWRcIilcbiAgICApO1xuICB9O1xuXG4gIHN1cHBsZW1lbnRhbC50aW1lRGF0YS5wcmVmZXJyZWQgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgY2xkci5nZXQoXCJzdXBwbGVtZW50YWwvdGltZURhdGEve3RlcnJpdG9yeX0vX3ByZWZlcnJlZFwiKSB8fFxuICAgICAgY2xkci5nZXQoXCJzdXBwbGVtZW50YWwvdGltZURhdGEvMDAxL19wcmVmZXJyZWRcIilcbiAgICApO1xuICB9O1xuXG4gIHJldHVybiBzdXBwbGVtZW50YWw7XG59XG4iLCJpbXBvcnQgQ2xkciBmcm9tIFwiQGNsZHJqcy9jb3JlXCI7XG5cbmltcG9ydCBzdXBwbGVtZW50YWxNYWluIGZyb20gXCIuL3N1cHBsZW1lbnRhbC9tYWluXCI7XG5cbnZhciBpbml0U3VwZXIgPSBDbGRyLnByb3RvdHlwZS5pbml0O1xuXG4vKipcbiAqIC5pbml0KCkgYXV0b21hdGljYWxseSByYW4gb24gY29uc3RydWN0aW9uLlxuICpcbiAqIE92ZXJsb2FkIC5pbml0KCkuXG4gKi9cbkNsZHIucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbigpIHtcbiAgaW5pdFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIHRoaXMuc3VwcGxlbWVudGFsID0gc3VwcGxlbWVudGFsTWFpbih0aGlzKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENsZHI7XG4iXSwibmFtZXMiOlsiQXJyYXkiLCJpc0FycmF5Iiwib2JqIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwic29tZXRoaW5nT3JBcnJheSIsImFycmF5SXNBcnJheSIsImNsZHIiLCJwcmVwZW5kIiwic3VwcGxlbWVudGFsIiwicGF0aCIsImFsd2F5c0FycmF5IiwiZ2V0IiwiY29uY2F0Iiwid2Vla0RhdGEiLCJmaXJzdERheSIsIm1pbkRheXMiLCJwYXJzZUludCIsInRpbWVEYXRhIiwiYWxsb3dlZCIsInByZWZlcnJlZCIsImluaXRTdXBlciIsIkNsZHIiLCJpbml0IiwiYXBwbHkiLCJhcmd1bWVudHMiLCJzdXBwbGVtZW50YWxNYWluIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLG1CQUFlQSxLQUFLLENBQUNDLE9BQU4sSUFDYixVQUFTQyxHQUFULEVBQWM7U0FDTEMsTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxRQUFqQixDQUEwQkMsSUFBMUIsQ0FBK0JKLEdBQS9CLE1BQXdDLGdCQUEvQztDQUZKOztBQ0VlLHNCQUFTSyxnQkFBVCxFQUEyQjtTQUNqQ0MsWUFBWSxDQUFDRCxnQkFBRCxDQUFaLEdBQWlDQSxnQkFBakMsR0FBb0QsQ0FBQ0EsZ0JBQUQsQ0FBM0Q7OztBQ0RhLDJCQUFTRSxJQUFULEVBQWU7TUFDeEJDLE9BQUosRUFBYUMsWUFBYjs7RUFFQUQsT0FBTyxHQUFHLGlCQUFTQSxRQUFULEVBQWtCO1dBQ25CLFVBQVNFLElBQVQsRUFBZTtNQUNwQkEsSUFBSSxHQUFHQyxXQUFXLENBQUNELElBQUQsQ0FBbEI7YUFDT0gsSUFBSSxDQUFDSyxHQUFMLENBQVMsQ0FBQ0osUUFBRCxFQUFVSyxNQUFWLENBQWlCSCxJQUFqQixDQUFULENBQVA7S0FGRjtHQURGOztFQU9BRCxZQUFZLEdBQUdELE9BQU8sQ0FBQyxjQUFELENBQXRCLENBVjRCOzs7RUFjNUJDLFlBQVksQ0FBQ0ssUUFBYixHQUF3Qk4sT0FBTyxDQUFDLHVCQUFELENBQS9COztFQUVBQyxZQUFZLENBQUNLLFFBQWIsQ0FBc0JDLFFBQXRCLEdBQWlDLFlBQVc7V0FFeENSLElBQUksQ0FBQ0ssR0FBTCxDQUFTLDRDQUFULEtBQ0FMLElBQUksQ0FBQ0ssR0FBTCxDQUFTLG9DQUFULENBRkY7R0FERjs7RUFPQUgsWUFBWSxDQUFDSyxRQUFiLENBQXNCRSxPQUF0QixHQUFnQyxZQUFXO1FBQ3JDQSxPQUFPLEdBQ1RULElBQUksQ0FBQ0ssR0FBTCxDQUFTLDJDQUFULEtBQ0FMLElBQUksQ0FBQ0ssR0FBTCxDQUFTLG1DQUFULENBRkY7V0FHT0ssUUFBUSxDQUFDRCxPQUFELEVBQVUsRUFBVixDQUFmO0dBSkYsQ0F2QjRCOzs7O0VBZ0M1QlAsWUFBWSxDQUFDUyxRQUFiLEdBQXdCVixPQUFPLENBQUMsdUJBQUQsQ0FBL0I7O0VBRUFDLFlBQVksQ0FBQ1MsUUFBYixDQUFzQkMsT0FBdEIsR0FBZ0MsWUFBVztXQUV2Q1osSUFBSSxDQUFDSyxHQUFMLENBQVMsNENBQVQsS0FDQUwsSUFBSSxDQUFDSyxHQUFMLENBQVMsb0NBQVQsQ0FGRjtHQURGOztFQU9BSCxZQUFZLENBQUNTLFFBQWIsQ0FBc0JFLFNBQXRCLEdBQWtDLFlBQVc7V0FFekNiLElBQUksQ0FBQ0ssR0FBTCxDQUFTLDhDQUFULEtBQ0FMLElBQUksQ0FBQ0ssR0FBTCxDQUFTLHNDQUFULENBRkY7R0FERjs7U0FPT0gsWUFBUDs7O0FDOUNGLElBQUlZLFNBQVMsR0FBR0MsSUFBSSxDQUFDcEIsU0FBTCxDQUFlcUIsSUFBL0I7Ozs7Ozs7QUFPQUQsSUFBSSxDQUFDcEIsU0FBTCxDQUFlcUIsSUFBZixHQUFzQixZQUFXO0VBQy9CRixTQUFTLENBQUNHLEtBQVYsQ0FBZ0IsSUFBaEIsRUFBc0JDLFNBQXRCO09BQ0toQixZQUFMLEdBQW9CaUIsZ0JBQWdCLENBQUMsSUFBRCxDQUFwQztDQUZGOzs7OyJ9
